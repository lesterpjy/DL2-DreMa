#!/bin/bash

#SBATCH --partition=gpu_a100          # Partition name
#SBATCH --gres=gpu:1                  # Number of GPUs to allocate
#SBATCH --cpus-per-task=8             # Number of CPU cores per task
#SBATCH --gpus=1                      # This line is sometimes optional/redundant
#SBATCH --job-name=peract_env_test    # Job name
#SBATCH --ntasks=1                    # Number of tasks
#SBATCH --time=00:30:00               # Time limit hh:mm:ss
#SBATCH --mem=16000M                  # Memory pool for all cores (16GB)
#SBATCH --output=work/peract_env_test_%A.out  # Standard output

### --- MODULE SETUP / ENVIRONMENT ---
module purge
module load 2023
# Uncomment if your cluster requires Apptainer module
# module load Apptainer/<VERSION>

### --- PREPARE DIRECTORY STRUCTURE ---
echo "Setting up directory structure..."
mkdir -p data cache work src scripts configs assets drema submodules

# Copy test scripts to the scripts directory if needed
cp test_peract_env.py scripts/ 2>/dev/null || true
cp test_pyrep.py scripts/ 2>/dev/null || true

### --- RUN THE ENVIRONMENT TESTS ---
echo "Starting PerAct environment tests..."

# Run the environment test script (package verification only)
echo "1. Running package verification test..."
apptainer run --nv \
    --pwd /local/work \
    -B $(pwd)/data:/local/data \
    -B $(pwd)/cache:/local/cache \
    -B $(pwd)/work:/local/work \
    -B $(pwd)/src:/local/src \
    -B $(pwd)/scripts:/local/scripts \
    -B $(pwd)/configs:/local/configs \
    -B $(pwd)/assets:/local/assets \
    -B $(pwd)/drema:/local/drema \
    -B $(pwd)/submodules:/local/submodules \
    ./peract-latest.sif \
    python /local/scripts/test_peract_env.py

# Run the PyRep test with combined headless configuration runner
echo "2. Testing PyRep with CoppeliaSim in headless mode..."
apptainer run --nv \
    --pwd /local/work \
    -B $(pwd)/data:/local/data \
    -B $(pwd)/cache:/local/cache \
    -B $(pwd)/work:/local/work \
    -B $(pwd)/src:/local/src \
    -B $(pwd)/scripts:/local/scripts \
    -B $(pwd)/configs:/local/configs \
    -B $(pwd)/assets:/local/assets \
    -B $(pwd)/drema:/local/drema \
    -B $(pwd)/submodules:/local/submodules \
    ./peract-latest.sif \
    /usr/local/bin/run_peract.sh python /local/scripts/test_pyrep.py

# Test running a minimal PerAct command
echo "3. Testing PerAct quickstart command..."
apptainer run --nv \
    --pwd /local/work \
    -B $(pwd)/data:/local/data \
    -B $(pwd)/cache:/local/cache \
    -B $(pwd)/work:/local/work \
    -B $(pwd)/src:/local/src \
    -B $(pwd)/scripts:/local/scripts \
    -B $(pwd)/configs:/local/configs \
    -B $(pwd)/assets:/local/assets \
    -B $(pwd)/drema:/local/drema \
    -B $(pwd)/submodules:/local/submodules \
    ./peract-latest.sif \
    /usr/local/bin/run_peract.sh python -c "import os; print(f'Running in {os.getcwd()}'); from helpers import utils; print('PerAct helpers.utils imported successfully')"

echo "PerAct environment tests completed!"
