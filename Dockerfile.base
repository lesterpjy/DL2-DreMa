FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    git \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create symbolic link for python
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN pip install --upgrade pip --no-cache-dir

# Set CUDA environment variables
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install PyTorch and major dependencies
RUN pip install --no-cache-dir --extra-index-url https://download.pytorch.org/whl/cu118 \
    torch==2.5.0 \
    torchvision==0.20.0 \
    torchaudio==2.5.0 \
    && rm -rf /root/.cache/pip

# Install common ML packages
RUN pip install --no-cache-dir \
    numpy==1.23 \
    opencv-python \
    matplotlib \
    trimesh==3.10 \
    pybullet \
    mediapy \
    plyfile \
    setuptools==49.4 \
    hydra-core>=1.3.2 \
    && rm -rf /root/.cache/pip

# Try to install packages that might fail but aren't critical for build
RUN pip install --no-cache-dir open3d object2urdf || echo "Some packages could not be installed"

# Set working directories
WORKDIR /local

# Create standard directory structure
RUN mkdir -p /local/src /local/configs /local/scripts /local/work /local/cache \
    /local/assets /local/data /local/drema /local/submodules
